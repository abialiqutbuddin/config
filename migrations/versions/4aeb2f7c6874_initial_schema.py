"""initial schema

Revision ID: 4aeb2f7c6874
Revises: 
Create Date: 2025-10-08 11:55:24.316196

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4aeb2f7c6874'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('config_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('version_label', sa.String(), nullable=False),
    sa.Column('json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'version_label', name='uq_config_versions_project_label')
    )
    op.create_index(op.f('ix_config_versions_project_id'), 'config_versions', ['project_id'], unique=False)
    op.create_table('entitlements_cache',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('as_of', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('project_id', 'account_id')
    )
    op.create_table('idempotency_keys',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('request_hash', sa.String(), nullable=False),
    sa.Column('response', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('project_id', 'key')
    )
    op.create_table('payment_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('received_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_events_event_type'), 'payment_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_payment_events_project_id'), 'payment_events', ['project_id'], unique=False)
    op.create_index(op.f('ix_payment_events_provider'), 'payment_events', ['provider'], unique=False)
    op.create_table('usage_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('metric_key', sa.String(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('source_id', sa.String(), nullable=True),
    sa.Column('occurred_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'account_id', 'metric_key', 'source_id', name='uq_usage_dedupe')
    )
    op.create_index(op.f('ix_usage_records_account_id'), 'usage_records', ['account_id'], unique=False)
    op.create_index(op.f('ix_usage_records_metric_key'), 'usage_records', ['metric_key'], unique=False)
    op.create_index(op.f('ix_usage_records_project_id'), 'usage_records', ['project_id'], unique=False)
    op.create_index('ix_usage_window', 'usage_records', ['project_id', 'account_id', 'metric_key', 'occurred_at'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('plan_code', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('config_version_id', sa.UUID(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('current_period_start', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('trial_end_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('checkout_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['config_version_id'], ['config_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index('ix_subs_project_account', 'subscriptions', ['project_id', 'account_id'], unique=False)
    op.create_index('ix_subs_project_status', 'subscriptions', ['project_id', 'status'], unique=False)
    op.create_index(op.f('ix_subscriptions_account_id'), 'subscriptions', ['account_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_config_version_id'), 'subscriptions', ['config_version_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_project_id'), 'subscriptions', ['project_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_status'), 'subscriptions', ['status'], unique=False)
    op.create_index(op.f('ix_subscriptions_stripe_customer_id'), 'subscriptions', ['stripe_customer_id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=True),
    sa.Column('stripe_invoice_id', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hosted_invoice_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('period_start', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('period_end', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_invoice_id')
    )
    op.create_index(op.f('ix_invoices_project_id'), 'invoices', ['project_id'], unique=False)
    op.create_index(op.f('ix_invoices_stripe_customer_id'), 'invoices', ['stripe_customer_id'], unique=False)
    op.create_index(op.f('ix_invoices_stripe_subscription_id'), 'invoices', ['stripe_subscription_id'], unique=False)
    op.create_index(op.f('ix_invoices_subscription_id'), 'invoices', ['subscription_id'], unique=False)
    op.create_table('invoice_lines',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('line_type', sa.String(), nullable=False),
    sa.Column('feature_key', sa.String(), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice_lines')
    op.drop_index(op.f('ix_invoices_subscription_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_stripe_subscription_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_stripe_customer_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_project_id'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_subscriptions_stripe_customer_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_status'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_project_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_config_version_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_account_id'), table_name='subscriptions')
    op.drop_index('ix_subs_project_status', table_name='subscriptions')
    op.drop_index('ix_subs_project_account', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_usage_window', table_name='usage_records')
    op.drop_index(op.f('ix_usage_records_project_id'), table_name='usage_records')
    op.drop_index(op.f('ix_usage_records_metric_key'), table_name='usage_records')
    op.drop_index(op.f('ix_usage_records_account_id'), table_name='usage_records')
    op.drop_table('usage_records')
    op.drop_index(op.f('ix_payment_events_provider'), table_name='payment_events')
    op.drop_index(op.f('ix_payment_events_project_id'), table_name='payment_events')
    op.drop_index(op.f('ix_payment_events_event_type'), table_name='payment_events')
    op.drop_table('payment_events')
    op.drop_table('idempotency_keys')
    op.drop_table('entitlements_cache')
    op.drop_index(op.f('ix_config_versions_project_id'), table_name='config_versions')
    op.drop_table('config_versions')
    # ### end Alembic commands ###
