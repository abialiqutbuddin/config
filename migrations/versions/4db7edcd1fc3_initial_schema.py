"""initial schema

Revision ID: 4db7edcd1fc3
Revises: 63ae4fdbd823
Create Date: 2025-10-07 15:25:49.083040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4db7edcd1fc3'
down_revision: Union[str, Sequence[str], None] = '63ae4fdbd823'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('config_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    op.alter_column('idempotency_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    op.alter_column('invoices', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    op.alter_column('payment_events', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    op.add_column('subscriptions', sa.Column('checkout_url', sa.String(), nullable=True))
    op.alter_column('subscriptions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    op.alter_column('subscriptions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('subscriptions_stripe_subscription_id_key', 'subscriptions', type_='unique')
    op.create_index('ix_subs_project_account', 'subscriptions', ['project_id', 'account_id'], unique=False)
    op.create_index('ix_subs_project_status', 'subscriptions', ['project_id', 'status'], unique=False)
    op.create_index(op.f('ix_subscriptions_stripe_subscription_id'), 'subscriptions', ['stripe_subscription_id'], unique=True)
    op.drop_constraint('subscriptions_config_version_id_fkey', 'subscriptions', type_='foreignkey')
    op.create_foreign_key(None, 'subscriptions', 'config_versions', ['config_version_id'], ['id'], ondelete='RESTRICT')
    op.alter_column('usage_records', 'occurred_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               existing_nullable=False)
    op.alter_column('usage_records', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text("timezone('utc', now())"),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('usage_records', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    op.alter_column('usage_records', 'occurred_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.drop_constraint(None, 'subscriptions', type_='foreignkey')
    op.create_foreign_key('subscriptions_config_version_id_fkey', 'subscriptions', 'config_versions', ['config_version_id'], ['id'])
    op.drop_index(op.f('ix_subscriptions_stripe_subscription_id'), table_name='subscriptions')
    op.drop_index('ix_subs_project_status', table_name='subscriptions')
    op.drop_index('ix_subs_project_account', table_name='subscriptions')
    op.create_unique_constraint('subscriptions_stripe_subscription_id_key', 'subscriptions', ['stripe_subscription_id'])
    op.alter_column('subscriptions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('subscriptions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    op.drop_column('subscriptions', 'checkout_url')
    op.alter_column('payment_events', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    op.alter_column('invoices', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    op.alter_column('idempotency_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    op.alter_column('config_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=True)
    # ### end Alembic commands ###
